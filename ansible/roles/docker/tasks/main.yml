---

- name: apt-get update
  apt: update_cache=yes

- name: Installing ufw
  apt: name=ufw state=present
  notify:
    - restart ufw

- name: Install deps
  apt: name={{ item }}  state=present
  with_items:
    - apt-transport-https
    - python-pip
    - build-essential
    - nginx
    - letsencrypt

  #- name: install linux-headers
  #shell: apt-get install -y linux-headers-$(uname -r)
  #register: header_result
  #failed_when: header_result.rc != 0
  #changed_when: header_result.rc == 0 and ("already the newest version" not in header_result.stdout)

- name: Install docker
  apt: name=docker.io state=present
  notify:
    - restart docker

- name: Installing Python depencies
  pip: name=docker-py

- name: config ufw - allow ssh
  ufw: rule=allow port=22 proto=tcp
  notify:
    - restart ufw

- name: Checkout Whose turn is it anyway
  git: repo=https://github.com/apollux/whose_turn_is_it_anyway.git dest=./whose_turn_is_it_anyway

- name: Build docker image
  docker_image:
    path: ./whose_turn_is_it_anyway
    name: whose_turn_is_it_anyway
    repository: whose_turn_is_it_anyway
    state: present
  tags:
    - docker

- name: Setup app directory structure
  file: path=/var/app/{{ item }} state=directory
  with_items:
    - app
    - config
  tags:
    - docker

- name: configure docker env
  template: src=env dest=/var/app/config/ force=no
  tags:
    - docker

- name: Start container
  docker_container:
    name: whose_turn_is_it_anyway
    state: started
    image: whose_turn_is_it_anyway
    ports:
      - "127.0.0.1:5000:5000"
    env_file: /var/app/config/env
    volumes:
      - /var/app/data:/data
    restart_policy: always
  tags:
    - docker

- name: Configure Nginx
  copy: src=whose_turn_is_it_anyway.sites-available dest=/etc/nginx/sites-available/whose_turn_is_it_anyway owner=www-data group=www-data
  notify:
    - restart nginx

- name: Enable site
  file: src=/etc/nginx/sites-available/whose_turn_is_it_anyway dest=/etc/nginx/sites-enabled/whose_turn_is_it_anyway state=link
  notify:
    - restart nginx

- name: Setup automatic certificate renewal with certbot
  cron: name=Certbot special_time=daily job="letsencrypt renew --agree-tos"
  notify:
   - restart nginx

- name: config ufw - allow http(s)
  ufw: rule=allow port={{ item }} proto=tcp
  notify:
    - restart ufw
  with_items:
    - 80
    - 443

